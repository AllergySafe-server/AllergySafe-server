name: Spring Boot with Maven Deployment

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v3

    - name: Set up JDK 19
      uses: actions/setup-java@v3
      with:
        java-version: '19'
        distribution: 'temurin'
        cache: maven

    - name: Import secrets
      run: |
        cd ./src/main/resources
        echo "${{ secrets.APPLICATION_YML }}" > ./application.yml
      shell: bash

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add remote server to known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
    
    - name: File transfer via SCP
      run: scp -P ${{ secrets.SERVER_PORT }} ./target/*.jar ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:~/deploy/allergy-safe/web/app.jar
    
    - name: Execute remote commands
      run: |
        ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -p ${{ secrets.SERVER_PORT }} "cd ~/deploy/allergy-safe/"
        ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -p ${{ secrets.SERVER_PORT }} "docker compose down"
        ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -p ${{ secrets.SERVER_PORT }} "docker compose build --no-cache"
        ssh -v ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} -p ${{ secrets.SERVER_PORT }} "docker compose up -d"

